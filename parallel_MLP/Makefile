# -*- Makefile -*-
### Makefile - VHDL Makefile generated by Emacs VHDL Mode 3.38.1

# Project   : Parallel MLP
# Platform  : ModelSim
# Generated : 2020-12-08 13:04:57 jordi


# Define compilation command and options

COMPILE = vcom
OPTIONS = -2008 -2008 -work work


# Define library paths

LIBRARY-work = work


# Define library unit files

UNIT-work-mac = \
	$(LIBRARY-work)/mac/_primary.dat
UNIT-work-mac-behaviour = \
	$(LIBRARY-work)/mac/behaviour.dat
UNIT-work-mac_tb = \
	$(LIBRARY-work)/mac_tb/_primary.dat
UNIT-work-mac_tb-mac_tb = \
	$(LIBRARY-work)/mac_tb/mac_tb.dat
UNIT-work-mac_tb_mac_tb_cfg = \
	$(LIBRARY-work)/mac_tb_mac_tb_cfg/_primary.dat
UNIT-work-neuron_unit = \
	$(LIBRARY-work)/neuron_unit/_primary.dat
UNIT-work-neuron_unit-structure = \
	$(LIBRARY-work)/neuron_unit/structure.dat
UNIT-work-neuron_unit_tb = \
	$(LIBRARY-work)/neuron_unit_tb/_primary.dat
UNIT-work-neuron_unit_tb-neuron_unit_tb = \
	$(LIBRARY-work)/neuron_unit_tb/neuron_unit_tb.dat
UNIT-work-neuron_unit_tb_neuron_unit_tb_cfg = \
	$(LIBRARY-work)/neuron_unit_tb_neuron_unit_tb_cfg/_primary.dat
UNIT-work-parallel_mlp = \
	$(LIBRARY-work)/parallel_mlp/_primary.dat
UNIT-work-parallel_mlp-structure = \
	$(LIBRARY-work)/parallel_mlp/structure.dat
UNIT-work-parallel_neuron = \
	$(LIBRARY-work)/parallel_neuron/_primary.dat
UNIT-work-parallel_neuron-structure = \
	$(LIBRARY-work)/parallel_neuron/structure.dat
UNIT-work-parallel_neuron_tb = \
	$(LIBRARY-work)/parallel_neuron_tb/_primary.dat
UNIT-work-parallel_neuron_tb-parallel_neuron_tb = \
	$(LIBRARY-work)/parallel_neuron_tb/parallel_neuron_tb.dat
UNIT-work-parallel_neuron_tb_parallel_neuron_tb_cfg = \
	$(LIBRARY-work)/parallel_neuron_tb_parallel_neuron_tb_cfg/_primary.dat
UNIT-work-relu = \
	$(LIBRARY-work)/relu/_primary.dat
UNIT-work-relu-behaviour = \
	$(LIBRARY-work)/relu/behaviour.dat
UNIT-work-types_and_constants = \
	$(LIBRARY-work)/types_and_constants/_primary.dat
UNIT-work-weight_rom = \
	$(LIBRARY-work)/weight_rom/_primary.dat
UNIT-work-weight_rom-constants = \
	$(LIBRARY-work)/weight_rom/constants.dat


# Define list of all library unit files

ALL_UNITS = \
	$(UNIT-work-mac) \
	$(UNIT-work-mac-behaviour) \
	$(UNIT-work-mac_tb) \
	$(UNIT-work-mac_tb-mac_tb) \
	$(UNIT-work-mac_tb_mac_tb_cfg) \
	$(UNIT-work-neuron_unit) \
	$(UNIT-work-neuron_unit-structure) \
	$(UNIT-work-neuron_unit_tb) \
	$(UNIT-work-neuron_unit_tb-neuron_unit_tb) \
	$(UNIT-work-neuron_unit_tb_neuron_unit_tb_cfg) \
	$(UNIT-work-parallel_mlp) \
	$(UNIT-work-parallel_mlp-structure) \
	$(UNIT-work-parallel_neuron) \
	$(UNIT-work-parallel_neuron-structure) \
	$(UNIT-work-parallel_neuron_tb) \
	$(UNIT-work-parallel_neuron_tb-parallel_neuron_tb) \
	$(UNIT-work-parallel_neuron_tb_parallel_neuron_tb_cfg) \
	$(UNIT-work-relu) \
	$(UNIT-work-relu-behaviour) \
	$(UNIT-work-types_and_constants) \
	$(UNIT-work-weight_rom) \
	$(UNIT-work-weight_rom-constants)



# Rule for compiling entire design

all : \
		library \
		$(ALL_UNITS)


# Rule for cleaning entire design

clean : 
	-rm -f $(ALL_UNITS)


# Rule for creating library directory

library : \
		$(LIBRARY-work)

$(LIBRARY-work) :
	vlib $(LIBRARY-work); vmap work $(LIBRARY-work)


.PHONY : all clean library


# Rules for compiling single library units and their subhierarchy

mac \
MAC : \
		library \
		types_and_constants \
		$(UNIT-work-mac) \
		$(UNIT-work-mac-behaviour)

mac_tb \
MAC_tb : \
		library \
		mac \
		types_and_constants \
		$(UNIT-work-mac_tb) \
		$(UNIT-work-mac_tb-mac_tb)

mac_tb_mac_tb_cfg \
MAC_tb_MAC_tb_cfg : \
		library \
		mac_tb \
		$(UNIT-work-mac_tb_mac_tb_cfg)

neuron_unit : \
		library \
		parallel_neuron \
		types_and_constants \
		$(UNIT-work-neuron_unit) \
		$(UNIT-work-neuron_unit-structure)

neuron_unit_tb : \
		library \
		neuron_unit \
		types_and_constants \
		$(UNIT-work-neuron_unit_tb) \
		$(UNIT-work-neuron_unit_tb-neuron_unit_tb)

neuron_unit_tb_neuron_unit_tb_cfg : \
		library \
		neuron_unit_tb \
		$(UNIT-work-neuron_unit_tb_neuron_unit_tb_cfg)

parallel_mlp \
parallel_MLP : \
		library \
		types_and_constants \
		$(UNIT-work-parallel_mlp) \
		$(UNIT-work-parallel_mlp-structure)

parallel_neuron : \
		library \
		mac \
		relu \
		types_and_constants \
		$(UNIT-work-parallel_neuron) \
		$(UNIT-work-parallel_neuron-structure)

parallel_neuron_tb : \
		library \
		parallel_neuron \
		types_and_constants \
		$(UNIT-work-parallel_neuron_tb) \
		$(UNIT-work-parallel_neuron_tb-parallel_neuron_tb)

parallel_neuron_tb_parallel_neuron_tb_cfg : \
		library \
		parallel_neuron_tb \
		$(UNIT-work-parallel_neuron_tb_parallel_neuron_tb_cfg)

relu \
ReLU : \
		library \
		types_and_constants \
		$(UNIT-work-relu) \
		$(UNIT-work-relu-behaviour)

types_and_constants : \
		library \
		$(UNIT-work-types_and_constants)

weight_rom \
weight_ROM : \
		library \
		types_and_constants \
		$(UNIT-work-weight_rom) \
		$(UNIT-work-weight_rom-constants)


# Rules for compiling single library unit files

$(UNIT-work-mac) \
$(UNIT-work-mac-behaviour) : \
		rtl/MAC.vhd \
		$(UNIT-work-types_and_constants)
	$(COMPILE) $(OPTIONS) rtl/MAC.vhd

$(UNIT-work-mac_tb) \
$(UNIT-work-mac_tb-mac_tb) \
$(UNIT-work-mac_tb_mac_tb_cfg) : \
		tb/MAC_tb.vhd \
		$(UNIT-work-mac) \
		$(UNIT-work-types_and_constants)
	$(COMPILE) $(OPTIONS) tb/MAC_tb.vhd

$(UNIT-work-neuron_unit) \
$(UNIT-work-neuron_unit-structure) : \
		rtl/neuron_unit.vhd \
		$(UNIT-work-parallel_neuron) \
		$(UNIT-work-types_and_constants)
	$(COMPILE) $(OPTIONS) rtl/neuron_unit.vhd

$(UNIT-work-neuron_unit_tb) \
$(UNIT-work-neuron_unit_tb-neuron_unit_tb) \
$(UNIT-work-neuron_unit_tb_neuron_unit_tb_cfg) : \
		tb/neuron_unit_tb.vhd \
		$(UNIT-work-neuron_unit) \
		$(UNIT-work-types_and_constants)
	$(COMPILE) $(OPTIONS) tb/neuron_unit_tb.vhd

$(UNIT-work-parallel_mlp) \
$(UNIT-work-parallel_mlp-structure) : \
		rtl/parallel_MLP.vhd \
		$(UNIT-work-types_and_constants)
	$(COMPILE) $(OPTIONS) rtl/parallel_MLP.vhd

$(UNIT-work-parallel_neuron) \
$(UNIT-work-parallel_neuron-structure) : \
		rtl/parallel_neuron.vhd \
		$(UNIT-work-mac) \
		$(UNIT-work-relu) \
		$(UNIT-work-types_and_constants)
	$(COMPILE) $(OPTIONS) rtl/parallel_neuron.vhd

$(UNIT-work-parallel_neuron_tb) \
$(UNIT-work-parallel_neuron_tb-parallel_neuron_tb) \
$(UNIT-work-parallel_neuron_tb_parallel_neuron_tb_cfg) : \
		tb/parallel_neuron_tb.vhd \
		$(UNIT-work-parallel_neuron) \
		$(UNIT-work-types_and_constants)
	$(COMPILE) $(OPTIONS) tb/parallel_neuron_tb.vhd

$(UNIT-work-relu) \
$(UNIT-work-relu-behaviour) : \
		rtl/ReLU.vhd \
		$(UNIT-work-types_and_constants)
	$(COMPILE) $(OPTIONS) rtl/ReLU.vhd

$(UNIT-work-types_and_constants) : \
		rtl/types_and_constants.vhd
	$(COMPILE) $(OPTIONS) rtl/types_and_constants.vhd

$(UNIT-work-weight_rom) \
$(UNIT-work-weight_rom-constants) : \
		rtl/weight_ROM.vhd \
		$(UNIT-work-types_and_constants)
	$(COMPILE) $(OPTIONS) rtl/weight_ROM.vhd


### Makefile ends here
